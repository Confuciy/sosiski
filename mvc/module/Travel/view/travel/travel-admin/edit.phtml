<?php
$this->headTitle($this->translate('Edit Travels'));

$this->pageBreadcrumbs()->setItems([
    $this->translate('Travels') => $this->url('travels'),
    $this->translate('Edit Travels') => $this->url('travels_admin'),
    $this->translate('Add Travel') => $this->url('travels_admin', ['action' => 'add']),
]);
?>
<!--<h2>--><?//= $this->translate('Edit Travels'); ?><!--</h2>-->
<h2><?= $this->travel['txt'][$_SESSION['locale']]['title']; ?></h2>

<br />

<div>
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#main-info" aria-controls="main-info" role="tab" data-toggle="tab"><?= $this->translate('Main Info'); ?></a></li>
        <?php foreach ($this->langs as $lang): ?>
            <li role="presentation"><a href="#<?= $lang['locale']; ?>" aria-controls="<?= $lang['locale']; ?>" role="tab" data-toggle="tab"><?= $lang['name']; ?></a></li>
        <?php endforeach; ?>
        <li role="presentation"><a href="#images" aria-controls="images" role="tab" data-toggle="tab"><?= $this->translate('Images'); ?></a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="main-info">
            <br />

            <?= $this->translate('Main Info'); ?>
        </div>
        <?php foreach ($this->langs as $lang): ?>
            <div role="tabpanel" class="tab-pane" id="<?= $lang['locale']; ?>">
                <br />

                <?= $lang['locale']; ?> / <?= $lang['name']; ?>
            </div>
        <?php endforeach; ?>
        <div role="tabpanel" class="tab-pane" id="images">
            <br />

            <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
            <link rel="stylesheet" href="/js/jquery-file-upload-9.14.2/css/jquery.fileupload.css">

            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
                <i class="glyphicon glyphicon-plus"></i>
                <span>Add files...</span>
                <!-- The file input field used as target for the file upload widget -->
                <input id="fileupload" type="file" name="files[]" multiple>
            </span>

            <br /><br />

            <!-- The global progress bar -->
            <div id="progress" class="progress">
                <div class="progress-bar progress-bar-success"></div>
            </div>
            <!-- The container for the uploaded files -->
            <div id="files" class="files"></div>

            <script src="/js/jquery-file-upload-9.14.2/js/vendor/jquery.ui.widget.js"></script>
            <script src="//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
            <script src="//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
            <script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.iframe-transport.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-process.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-image.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-audio.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-video.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-validate.js"></script>
            <script>
                /*jslint unparam: true, regexp: true */
                /*global window, $ */
                $(function () {
                    'use strict';
                    // Change this to the location of your server-side upload handler:
                    var url = '/img/uploads/',
                        uploadButton = $('<button/>')
                            .addClass('btn btn-primary')
                            .prop('disabled', true)
                            .text('Processing...')
                            .on('click', function () {
                                var $this = $(this),
                                    data = $this.data();
                                $this
                                    .off('click')
                                    .text('Abort')
                                    .on('click', function () {
                                        $this.remove();
                                        data.abort();
                                    });
                                data.submit().always(function () {
                                    $this.remove();
                                });
                            });
                    $('#fileupload').fileupload({
                        url: url,
                        dataType: 'json',
                        autoUpload: false,
                        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                        maxFileSize: 999000,
                        // Enable image resizing, except for Android and Opera,
                        // which actually support image resizing, but fail to
                        // send Blob objects via XHR requests:
                        disableImageResize: /Android(?!.*Chrome)|Opera/
                            .test(window.navigator.userAgent),
                        previewMaxWidth: 100,
                        previewMaxHeight: 100,
                        previewCrop: true
                    }).on('fileuploadadd', function (e, data) {
                        data.context = $('<div/>').appendTo('#files');
                        $.each(data.files, function (index, file) {
                            var node = $('<p/>')
                                .append($('<span/>').text(file.name));
                            if (!index) {
                                node
                                    .append('<br>')
                                    .append(uploadButton.clone(true).data(data));
                            }
                            node.appendTo(data.context);
                        });
                    }).on('fileuploadprocessalways', function (e, data) {
                        var index = data.index,
                            file = data.files[index],
                            node = $(data.context.children()[index]);
                        if (file.preview) {
                            node
                                .prepend('<br>')
                                .prepend(file.preview);
                        }
                        if (file.error) {
                            node
                                .append('<br>')
                                .append($('<span class="text-danger"/>').text(file.error));
                        }
                        if (index + 1 === data.files.length) {
                            data.context.find('button')
                                .text('Upload')
                                .prop('disabled', !!data.files.error);
                        }
                    }).on('fileuploadprogressall', function (e, data) {
                        var progress = parseInt(data.loaded / data.total * 100, 10);
                        $('#progress .progress-bar').css(
                            'width',
                            progress + '%'
                        );
                    }).on('fileuploaddone', function (e, data) {
                        $.each(data.result.files, function (index, file) {
                            if (file.url) {
//                                var link = $('<a>')
//                                    .attr('target', '_blank')
//                                    .prop('href', file.url);
//                                $(data.context.children()[index])
//                                    .wrap(link);
                                $(data.context.children()[index])
                                    .append('<br /><input type="text" value="/img/upload/files/' + file.name + '" style="width: 90%">');
                            } else if (file.error) {
                                var error = $('<span class="text-danger"/>').text(file.error);
                                $(data.context.children()[index])
                                    .append('<br>')
                                    .append(error);
                            }
                        });
                    }).on('fileuploadfail', function (e, data) {
                        $.each(data.files, function (index) {
                            var error = $('<span class="text-danger"/>').text('File upload failed.');
                            $(data.context.children()[index])
                                .append('<br>')
                                .append(error);
                        });
                    }).prop('disabled', !$.support.fileInput)
                        .parent().addClass($.support.fileInput ? undefined : 'disabled');
                });
            </script>
        </div>
    </div>
</div>

<br /><br />