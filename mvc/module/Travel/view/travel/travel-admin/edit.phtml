<?php
$this->headTitle($this->translate('Edit Travels'));

$this->pageBreadcrumbs()->setHeader($this->travel['txt'][$_SESSION['locale']]['title']);
$this->pageBreadcrumbs()->setItems([
    $this->translate('Travels') => $this->url('travels'),
    $this->translate('Edit Travels') => $this->url('travels_admin'),
    $this->translate('Add Travel') => $this->url('travels_admin', ['action' => 'add']),
]);

#echo '<pre>'; print_r($this->travel); echo '</pre>';
?>

<br />

<?php /* ?>
<!-- Include Quill stylesheet -->
<link href="https://cdn.quilljs.com/1.0.0/quill.snow.css" rel="stylesheet">
<!-- Include the Quill library -->
<script src="https://cdn.quilljs.com/1.0.0/quill.js"></script>
<script>
    var toolbarOptions = [
        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
        ['blockquote', 'code-block'],

        [{ 'header': 1 }, { 'header': 2 }],               // custom button values
        [{ 'list': 'ordered'}, { 'list': 'bullet' }],
        [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
        [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
        [{ 'direction': 'rtl' }],                         // text direction

        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
        [{ 'font': [] }],
        [{ 'align': [] }],

        ['link', 'image'],

        ['clean']                                         // remove formatting button
    ];
</script>
<?php */ ?>

<div>
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#main-info" aria-controls="main-info" role="tab" data-toggle="tab"><?= $this->translate('Main Info'); ?></a></li>
        <?php foreach ($this->langs as $lang): ?>
            <li role="presentation"><a href="#<?= $lang['locale']; ?>" aria-controls="<?= $lang['locale']; ?>" role="tab" data-toggle="tab"><?= $lang['name']; ?></a></li>
        <?php endforeach; ?>
        <li role="presentation"><a href="#images" aria-controls="images" role="tab" data-toggle="tab"><?= $this->translate('Images'); ?></a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="main-info" style="background: #f3f3f3; padding: 15px;">
            <?= $this->translate('Main Info'); ?>
<!--            [travel_id] => 1-->
<!--            [user_id] => 1-->
<!--            [url] => how_we_visited_alps-->
<!--            [image] => rs_IMG_7803.jpg-->
<!--            [date] => 2016-12-19-->
<!--            [status] => 1-->
<!--            [full_name] => Gorbachev Aleksey-->
<!--            [photo] => photo_1484346040.jpg-->
        </div>
        <?php foreach ($this->langs as $lang): ?>
            <div role="tabpanel" class="tab-pane" id="<?= $lang['locale']; ?>" style="background: #f3f3f3; padding: 15px;">
                <h3><?= $this->translate('Title'); ?></h3>
                <input type="text" class="form-control" style="width: 60%;" placeholder="<?= $this->translate('Title'); ?>" value="<?= $this->travel['txt'][$lang['locale']]['title']; ?>">

                <h3><?= $this->translate('Subtitle'); ?></h3>
                <input type="text" class="form-control" style="width: 60%;" placeholder="<?= $this->translate('Subtitle'); ?>" value="<?= $this->travel['txt'][$lang['locale']]['subtitle']; ?>">

                <h3><?= $this->translate('Announce'); ?></h3>
                <textarea class="form-control" rows="3"><?= $this->travel['txt'][$lang['locale']]['announce']; ?></textarea>

                <h3><?= $this->translate('Text'); ?></h3>
                <textarea class="form-control" rows="100"><?= $this->travel['txt'][$lang['locale']]['text']; ?></textarea>

                <?php /* ?>
                <!-- Create the toolbar container -->
                <div id="toolbar<?= $lang['locale']; ?>"></div>

                <!-- Create the editor container -->
                <div id="editor<?= $lang['locale']; ?>">
                    <p><?= $this->travel['txt'][$lang['locale']]['text']; ?></p>
                </div>

                <!-- Initialize Quill editor -->
                <script>
                    var toolbarOptions = [
                        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
                        ['blockquote', 'code-block'],

                        [{ 'header': 1 }, { 'header': 2 }],               // custom button values
                        [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                        [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
                        [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
                        [{ 'direction': 'rtl' }],                         // text direction

                        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
                        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

                        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
                        [{ 'font': [] }],
                        [{ 'align': [] }],

                        ['link', 'image']

                        ['clean']                                         // remove formatting button
                    ];

                    var editor<?= $lang['locale']; ?> = new Quill('#editor<?= $lang['locale']; ?>', {
                        modules: {
                            toolbar: toolbarOptions
                        },
                        theme: 'snow',
                        toolbar: '#toolbar<?= $lang['locale']; ?>'
                    });
                </script>
                <?php */ ?>
            </div>
        <?php endforeach; ?>
        <div role="tabpanel" class="tab-pane" id="images" style="padding: 15px;">

<!--            <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">-->
            <link rel="stylesheet" href="/js/jquery-file-upload-9.14.2/css/jquery.fileupload.css">

            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
                <i class="glyphicon glyphicon-plus"></i>
                <span>Add files...</span>
                <!-- The file input field used as target for the file upload widget -->
                <input id="fileupload" type="file" name="files[]" multiple>
            </span>

            <br /><br />

            <!-- The global progress bar -->
            <div id="progress" class="progress">
                <div class="progress-bar progress-bar-success"></div>
            </div>
            <!-- The container for the uploaded files -->
            <div id="files" class="files"></div>

            <script src="/js/jquery-file-upload-9.14.2/js/vendor/jquery.ui.widget.js"></script>
            <script src="//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
            <script src="//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
            <script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.iframe-transport.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-process.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-image.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-audio.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-video.js"></script>
            <script src="/js/jquery-file-upload-9.14.2/js/jquery.fileupload-validate.js"></script>
            <script>
                /*jslint unparam: true, regexp: true */
                /*global window, $ */
                $(function () {
                    'use strict';
                    // Change this to the location of your server-side upload handler:
                    var url = '/img/uploads',
                        uploadButton = $('<button/>')
                            .addClass('btn btn-primary')
                            .prop('disabled', true)
                            .text('Processing...')
                            .on('click', function () {
                                var $this = $(this),
                                    data = $this.data();
                                $this
                                    .off('click')
                                    .text('Abort')
                                    .on('click', function () {
                                        $this.remove();
                                        data.abort();
                                    });
                                data.submit().always(function () {
                                    $this.remove();
                                });
                            });
                    $('#fileupload').fileupload({
                        url: url,
                        dataType: 'json',
                        autoUpload: false,
                        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                        maxFileSize: 999000,
                        // Enable image resizing, except for Android and Opera,
                        // which actually support image resizing, but fail to
                        // send Blob objects via XHR requests:
                        disableImageResize: /Android(?!.*Chrome)|Opera/
                            .test(window.navigator.userAgent),
                        previewMaxWidth: 100,
                        previewMaxHeight: 100,
                        previewCrop: true,
                    }).on('fileuploadadd', function (e, data) {
                        data.context = $('<div/>').appendTo('#files');
                        $.each(data.files, function (index, file) {
                            var node = $('<p/>')
                                .append($('<span/>').text(file.name));
                            if (!index) {
                                node
                                    .append('<br>')
                                    .append(uploadButton.clone(true).data(data));
                            }
                            node.appendTo(data.context);
                        });
                    }).on('fileuploadprocessalways', function (e, data) {
                        var index = data.index,
                            file = data.files[index],
                            node = $(data.context.children()[index]);
                        if (file.preview) {
                            node
                                .prepend('<br>')
                                .prepend(file.preview);
                        }
                        if (file.error) {
                            node
                                .append('<br>')
                                .append($('<span class="text-danger"/>').text(file.error));
                        }
                        if (index + 1 === data.files.length) {
                            data.context.find('button')
                                .text('Upload')
                                .prop('disabled', !!data.files.error);
                        }
                    }).on('fileuploadprogressall', function (e, data) {
                        var progress = parseInt(data.loaded / data.total * 100, 10);
                        $('#progress .progress-bar').css(
                            'width',
                            progress + '%'
                        );
                    }).on('fileuploaddone', function (e, data) {
                        $.each(data.result.files, function (index, file) {
                            if (file.url) {
//                                var link = $('<a>')
//                                    .attr('target', '_blank')
//                                    .prop('href', file.url);
//                                $(data.context.children()[index])
//                                    .wrap(link);
                                $(data.context.children()[index])
                                    .append('<br /><b><?= $this->translate('Link'); ?></b><input type="text" class="form-control" value="/img/upload/files/' + file.name + '">' +
                                        '<br /><b><?= $this->translate('Code Fit'); ?></b><input type="text" class="form-control" value="<div class=&quot;12u$&quot;><span class=&quot;image fit&quot;><img src=&quot;/img/uploads/files/' + file.name + '&quot; width=&quot;&quot; alt=&quot;&quot;></span></div>">' +
                                        '<br /><b><?= $this->translate('Code Left'); ?></b><input type="text" class="form-control" value="<span class=&quot;image left&quot;><img src=&quot;/img/uploads/files/' + file.name + '&quot; width=&quot;&quot; alt=&quot;&quot;></span>">' +
                                        '<br /><b><?= $this->translate('Code Right'); ?></b><input type="text" class="form-control" value="<span class=&quot;image right&quot;><img src=&quot;/img/uploads/files/' + file.name + '&quot; width=&quot;&quot; alt=&quot;&quot;></span>">');
                            } else if (file.error) {
                                var error = $('<span class="text-danger"/>').text(file.error);
                                $(data.context.children()[index])
                                    .append('<br>')
                                    .append(error);
                            }
                        });
                    }).on('fileuploadfail', function (e, data) {
                        $.each(data.files, function (index) {
                            var error = $('<span class="text-danger"/>').text('File upload failed.');
                            $(data.context.children()[index])
                                .append('<br>')
                                .append(error);
                        });
                    }).prop('disabled', !$.support.fileInput)
                        .parent().addClass($.support.fileInput ? undefined : 'disabled');
                });
            </script>
        </div>
    </div>
</div>

<br /><br />